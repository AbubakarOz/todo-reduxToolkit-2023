:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

.App {
  margin-top: 5em;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.title {
  font-weight: 600;
  font-size: 2.5em;
  font-style: italic;
}

.main {
  margin: 3em;
}

.inputField {
  width: 30em;
  display: flex;
  justify-content: space-around;
}

.inputField input {
  width: 20em;
  padding: 0.6em 0.6em 0.6em 0.8em;
  outline: none;
  border-radius: 0.6em;
  border: none;
  background-color: #e8e8e8;
  color: #000;
}

.inputField input::placeholder {
  font-style: oblique;
  font-size: 1.1em;
}

.inputField button {
  --button_radius: 0.6em;
  --button_color: #e8e8e8;
  box-shadow: 0px 0px 6px 5px rgba(49, 89, 120, 0.315);
  font-size: 0.7em;
  font-weight: 600;
  border: none;
  border-radius: var(--button_radius);
  background: var(--button_outline_color);
  cursor: pointer;
  color: #000 !important;
}

.button_top {
  display: block;
  box-sizing: border-box;
  border: 2px solid var(--button_outline_color);
  border-radius: var(--button_radius);
  padding: 0.75em 1em;
  background: var(--button_color);
  transform: translateY(-0.2em);
  transition: transform 0.1s ease;
}

.inputField button:hover .button_top {
  transform: translateY(-0.33em);
}

.inputField button:active .button_top {
  transform: translateY(0);
}
/* /////////////////////////////////////////// */

.list {
  width: 30em;
  margin-top: 3em;
  display: flex;
  align-items: center;
  flex-direction: column;
  box-shadow: 0px 0px 7px 7px rgba(49, 89, 120, 0.315);
  justify-content: center;
  border-radius: 0.6em;
}

.case {
  width: 25em;
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: #000;
  box-shadow: 0px 0px 5px 2px #e8e8e8;
  background-color: #e8e8e8f3;
  border-radius: 0.3em;
  padding: 0.15em 0.5em;
  margin: 1em 0;
}

.content {
  width: 18em;
  display: flex;
  justify-content: center;
}

.del {
  cursor: pointer;
  color: red;
  font-size: 1.4em;
}

/* /////////////////Чекбокс/////////////////// */

.checkedStayle {
  text-decoration: line-through;
}

/* Hide the default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.container {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 18px;
  user-select: none;
}

/* Create a custom checkbox */
.checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 1.1em;
  width: 1.1em;
  background-color: #343434;
  border-radius: 5px;
  transition: all 0.5s;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #f0f0f0;
  border: 2px solid #343434;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
  filter: drop-shadow(0 0 10px #888);
}

.lastCheckmark:after {
  position: absolute;
  display: none;
  filter: drop-shadow(0 0 10px #888);
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 0.3em;
  top: 0.05em;
  width: 0.3em;
  height: 0.6em;
  border: solid #343434;
  border-width: 0 0.2em 0.2em 0;
  border-radius: 2px;
  transform: rotate(45deg);
  animation: bounceFadeIn 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
}

@keyframes bounceFadeIn {
  from {
    transform: translate(0, -10px) rotate(45deg);
    opacity: 0;
  }

  to {
    transform: translate(0, 0) rotate(45deg);
    opacity: 1;
  }
}
